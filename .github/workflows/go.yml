# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  release_out_upload_url: emptynull
  
jobs:
  linuxbuild:
    runs-on: ubuntu-latest
    outputs:
      release_out_upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Before Build Dictory
      run: |
       ls
    - name: Build
      run: go build -v ./...
    - name: After Build Dictory
      run: |
       ls
    - name: Test
      run: go test -v ./...   
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: my-bin
        path: go_test
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1
        release_name: v1
        draft: false
        prerelease: false
    - name: echo vars
      run: |
       echo "${{steps.create_release.outputs.upload_url}}"    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: go_test
        asset_name: go_test
        asset_content_type: application/octet-stream 
      
  windowsbuild:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Before Build Dictory
      run: |
       ls
    - name: Build
      run: go build -v ./...
    - name: After Build Dictory
      run: |
       dir
    - name: Test
      run: go test -v ./...   
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: my-bin.exe
        path: go_test.exe
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.linuxbuild.outputs.release_out_upload_url }}
        asset_path: go_test.exe
        asset_name: go_test.exe
        asset_content_type: application/octet-stream
    needs: linuxbuild  
